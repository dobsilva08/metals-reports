name: Gold Daily

on:
  workflow_dispatch:
  schedule:
    # 12:15 UTC (~09:15 BRT) — ajuste se preferir
    - cron: "15 12 * * *"

concurrency:
  group: gold-daily
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # --- IA (fallback) ---
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # --- Telegram ---
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID_METALS: ${{ secrets.TELEGRAM_CHAT_ID_METALS }}

      # --- Dados / APIs externas ---
      FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
      NASDAQ_DATA_LINK_API_KEY: ${{ secrets.NASDAQ_DATA_LINK_API_KEY }}
      GOLDAPI_KEY: ${{ secrets.GOLDAPI_KEY }}
      ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
      METALS_DEV_API: ${{ secrets.METALS_DEV_API }}
      METAL_PRICE_API: ${{ secrets.METAL_PRICE_API }}

      # --- Config adicionais ---
      SEC_USER_AGENT: "HubMetalsBot/1.0 (contact: your-email@example.com)"
      AISC_TICKERS: "NEM,GOLD"  # lista de mineradoras para AISC (proxy)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Sanity check - Telegram ping
        run: |
          python - << 'PY'
          import os, requests
          tok = os.environ.get("TELEGRAM_BOT_TOKEN")
          chat = os.environ.get("TELEGRAM_CHAT_ID_METALS")
          if tok and chat:
              msg = "✅ Conexão OK: Gold Daily inicializando..."
              url = f"https://api.telegram.org/bot{tok}/sendMessage"
              r = requests.post(url, json={"chat_id": chat, "text": msg})
              r.raise_for_status()
          PY

      - name: Run daily gold report
        run: |
          python scripts/gold_report.py

      - name: Mark as sent (anti-duplicidade)
        if: success()
        run: |
          set -e
          TS="$(date -u +'%Y-%m-%d')"
          mkdir -p .sent
          echo "done" > ".sent/done-gold-daily-${TS}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .sent/
          git commit -m "chore(gold): mark daily sent ${TS} [skip ci]" || echo "Nada para commitar"
          git push
