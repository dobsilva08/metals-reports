name: Gold Daily
run-name: "Gold Daily — Relatório Diário #${{ github.run_number }}"

on:
  schedule:
    - cron: "25 09 * * *"  # 09:25 UTC
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: gold-daily
      cancel-in-progress: false
    env:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID_METALS: ${{ secrets.TELEGRAM_CHAT_ID_METALS }}   # ex.: "-4909112173"
      FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
      NASDAQ_DATA_LINK_API_KEY: ${{ secrets.NASDAQ_DATA_LINK_API_KEY }}
      GOLDAPI_KEY: ${{ secrets.GOLDAPI_KEY }}
      ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
      METALS_DEV_API: ${{ secrets.METALS_DEV_API }}
      METAL_PRICE_API: ${{ secrets.METAL_PRICE_API }}
      SEC_USER_AGENT: ${{ secrets.SEC_USER_AGENT }}
      AISC_TICKERS: "NEM,GOLD"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      # ===== Passo opcional de SANITY CHECK do Telegram =====
      - name: Sanity check - Telegram ping
        env:
          TG_URL: ${{ format('https://api.telegram.org/bot{0}/sendMessage', secrets.TELEGRAM_BOT_TOKEN) }}
        run: |
          echo "Chat ID: $TELEGRAM_CHAT_ID_METALS"
          curl -sS -X POST "$TG_URL" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\": \"$TELEGRAM_CHAT_ID_METALS\", \"text\": \"✅ Conexão OK: Gold Daily inicializando...\"}" \
            | jq '.ok,.description?' || true

      - name: Run daily gold report
        run: python scripts/gold_report.py --period daily --send yes