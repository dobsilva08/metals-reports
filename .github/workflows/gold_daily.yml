name: Run daily gold report

on:
  schedule:
    # ajuste se quiser outro horário; UTC
    - cron: "15 11 * * *"
  workflow_dispatch:

# evita duas execuções simultâneas
concurrency:
  group: gold-daily
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # ====== Telegram (opcional) ======
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      # Se você já usa este secret, mapeamos para o nome esperado internamente
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID_METALS }}
      # (alternativamente, pode usar TELEGRAM_TO com @seu_canal)
      # TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}

      # ====== IA (opcional, com fallback automático) ======
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      # modelos/ordem podem ficar em Repository variables (ou em secrets)
      OPENAI_MODEL: ${{ vars.OPENAI_MODEL }}
      DEEPSEEK_MODEL: ${{ vars.DEEPSEEK_MODEL }}
      GROQ_MODEL: ${{ vars.GROQ_MODEL }}
      # Ex.: "groq,deepseek,openai" ou "openai" para usar só um
      LLM_PROVIDER_ORDER: ${{ vars.LLM_PROVIDER_ORDER }}

      # ====== APIs de dados (use as que tiver) ======
      FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
      GOLDAPI_KEY: ${{ secrets.GOLDAPI_KEY }}
      METALS_DEV_API: ${{ secrets.METALS_DEV_API }}
      METAL_PRICE_API: ${{ secrets.METAL_PRICE_API }}
      NASDAQ_DATA_LINK_API_KEY: ${{ secrets.NASDAQ_DATA_LINK_API_KEY }}

      SEC_USER_AGENT: HubMetalsBot/1.0 (contact: your-email@example.com)
      AISC_TICKERS: NEM,GOLD

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # preserva flags de envio e contador entre execuções
      - name: Cache sent flags and counters
        uses: actions/cache@v4
        with:
          path: |
            .sent
            counters
          key: gold-state-${{ runner.os }}-${{ hashFiles('scripts/gold_report.py') }}
          restore-keys: |
            gold-state-${{ runner.os }}-

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Run daily gold report
        run: python scripts/gold_report.py
