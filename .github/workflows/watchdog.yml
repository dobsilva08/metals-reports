name: Gold — Watchdog (Backup de Envio)

on:
  schedule:
    # Backup 3h depois do horário principal: 12:00 UTC ≙ 09:00 BRT
    - cron: "0 12 * * *"
  workflow_dispatch:

concurrency:
  group: metals-gold-watchdog
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # ===== LLM (padrão: PIAPI) =====
      PIAPI_API_KEY: ${{ secrets.PIAPI_API_KEY }}
      PIAPI_MODEL: gpt-4o-mini

      # Fallbacks (opcionais)
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GROQ_MODEL: llama-3.1-70b-versatile
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: gpt-4o-mini
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      DEEPSEEK_MODEL: deepseek-chat

      LLM_PROVIDER: piapi
      LLM_FALLBACK_ORDER: piapi,groq,openai,deepseek

      # ===== Telegram =====
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID_METALS: ${{ secrets.TELEGRAM_CHAT_ID_METALS }}
      TELEGRAM_CHAT_ID_TEST: ${{ secrets.TELEGRAM_CHAT_ID_TEST }}
      TELEGRAM_MESSAGE_THREAD_ID: ${{ secrets.TELEGRAM_MESSAGE_THREAD_ID }}

      # ===== Dados macro (opcionais) =====
      FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
      GOLDAPI_KEY: ${{ secrets.GOLDAPI_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: (Opcional) Verificar PiAPI
        if: ${{ env.PIAPI_API_KEY != '' }}
        continue-on-error: true
        run: |
          python scripts/providers/../tools/check_piapi.py

      - name: Rodar Watchdog (respeita trava .sent)
        run: |
          # NÃO usa --force: se o envio principal já ocorreu, o .sent impede duplicidade
          python scripts/gold_daily.py --send-telegram
